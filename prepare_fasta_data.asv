% prepare fasta data for feature selection
% The main task is to make sure the order of sequences is the same as the
% headers 
opts = detectImportOptions('9606_2021_cleaned');
opts.Delimiter=",";
data = readtable('9606_2021_cleaned',opts);
ProteinA_Unique = unique(data.ProteinA);
ProteinB_Unique = unique(data.ProteinB);
ProteinA = data.ProteinA;
ProteinB = data.ProteinB;
GeneA = data.GeneA;
GeneB = data.GeneB;
SubfamilyA = data.FamilyA;
SubfamilyB = data.FamilyB;
Score = data.Score;
PMID = data.PMID;
Sub_Unique = unique(SubfamilyB);
Tax_Unique = unique(data.TaxonB);
TaxonA = unique(data.TaxonA);
TaxonB_new = unique(data.TaxonB);
load Distance_30_2021.mat

% Below separate difference taxonomies into group --cretiarion 1
% TaxonB_new is already a result of unique()
% Group numbers in the comments are for organizing purpose only
% First, load the classification results from the previous version
TrainSet=cell(0,0);
TrainSet{end+1,1}=[134,166]; %#ok<*SAGROW> 
TrainSet{end+1,1}=120; % GROUP 1: Paramyxo (1)
TrainSet{end+1,1}=128; % GROUP 1: Paramyxo (62)
TrainSet{end+1,1}=67; % GROUP 1: Paramyxo (12)
TrainSet{end+1,1}=66; % GROUP 1: Paramyxo (4)
TrainSet{end+1,1}=68; % GROUP 2: Penuma(222) 
TrainSet{end+1,1}=[130,135]; % GROUP 3: Filo(90,1) Ebola
TrainSet{end+1,1}=[111]; % GROUP 3: Filo(23)Marburg
TrainSet{end+1,1}=[169]; % GROUP 4a: OrthoBunya(83)
TrainSet{end+1,1}=[73]; % GROUP 4b: Thlebo(26)
TrainSet{end+1,1}=[101]; % GROUP 4b: Thlebo(50)
TrainSet{end+1,1}=[106,54]; % GROUP 5: Flavi(107,1)
TrainSet{end+1,1}=[55]; % GROUP 5: Flavi(1) 
TrainSet{end+1,1}=[62,148]; % GROUP 6:HCV-subtype (4,93)
TrainSet{end+1,1}=[59,61]; % GROUP 6:HCV-subtype (2,38)
TrainSet{end+1,1}=58; % GROUP 6:HCV-subtype (3)
TrainSet{end+1,1}=[60,63,107,143,158,159]; % GROUP 6:HCV-subtype(1,2,1,28,4,6)
TrainSet{end+1,1}=[26,100]; % GROUP 7: Adeno(18,46)_
TrainSet{end+1,1}=[27,116]; % GROUP 7: Adeno (1,4) % removed 27 in 2021 new
TrainSet{end+1,1}=[131]; % GROUP 7: Adeno (1)
TrainSet{end+1,1}=[28 ]; % GROUP 7: Adeno(1)
TrainSet{end+1,1}=[29,99]; % GROUP 7: Adeno (1,16)
TrainSet{end+1,1}=[150,152,161,153,154,165,126,136];% GROUP 8: flu A H1N1(61,6,1,3,70,3,23,284)
TrainSet{end+1,1}=[132]; % GROUP 8: flu A H5N1 Hongkong (108)
TrainSet{end+1,1}= [151,157,155,162]; % GROUP 8: flu A H3N2 (101,1,2,1)
TrainSet{end+1,1}=[104,2,3,1]; % GROUP 9: Chordopox(7,9,156,6)
TrainSet{end+1,1}=[4];  % GROUP 9: Chordopoxng (16)
TrainSet{end+1,1}=[41];% GROUP 10: Pabilloma-Alpha (2)
TrainSet{end+1,1}=[38,145]; % GROUP 10: Pabilloma-Alpha (1,45)
TrainSet{end+1,1}=[39,37,144];% GROUP 10: Pabilloma-Alpha  (1,12,114)
TrainSet{end+1,1}=[35,40];% GROUP 10: Pabilloma-Alpha (36,16)
TrainSet{end+1,1}=[42];% GROUP 10: Pabilloma-Kabba  (3)
TrainSet{end+1,1}=[34];% GROUP 10: Pabilloma-Beta  (8)
TrainSet{end+1,1}=[36];% GROUP 10: Pabilloma-Mu  (7)
%Group 11: Herpses Beta
% TrainSet{end+1,1}=[18];% (2) removed 2021 New 
TrainSet{end+1,1}=[19];%(1)
TrainSet{end+1,1}=[14,15,16];%(62,2,19)
% GROUP 12: Herpes Gamma
TrainSet{end+1,1}=[21,124,20];%(103.13,297)
TrainSet{end+1,1}=[115,160,170];%(20,115,10)
% GROUP 13: Herpes Alpha 
TrainSet{end+1,1}=[5,6,7,8,9];% (120,225,1,1,) % human Herpesvirus 1
TrainSet{end+1,1}=[10,11];%(2,7) % Human Herpesvirus 2
% GROUP 14': HIV 1 
TrainSet{end+1,1}=[149,86,84,82,80,77]; %(3,2,80,1,4,39)
TrainSet{end+1,1}=[79,83,85,142] ;% (5,4,96,4)
TrainSet{end+1,1}=[76] ;%(127)
TrainSet{end+1,1}=[156];%#ok<*NBRAK> % (5)
TrainSet{end+1,1}=[81];% (3)
TrainSet{end+1,1}=[78];% (14)
TrainSet{end+1,1}=[87]; % Group 15:HIV2 (8)
TrainSet{end+1,1}=[88]; % Group 15:HIV2 (4)


% but still need to check which taxon the true members really belong
true_taxon_B=[];
for i=1:length(true_member)
    m = strsplit(true_member{i},"|");
    m = m{2};
    check = data.TaxonB(strcmp(m,data.ProteinB));
    if sum(check)>0
        true_taxon_B(end+1) = check(1);
    end
end

true_taxon_B = unique(true_taxon_B);


% Below check how many taxonomies are present in trainset but not in true_taxon B
taxon_to_delete_from_trainset=[];
for i=1:length(TrainSet)
    check = TrainSet{i};
    for j=1:length(check)
        tx=check(j);
        if ~ismember(tx,true_taxon_B)
            taxon_to_delete_from_trainset(end+1)=tx;
        end
    end
end
% There are only 2 taxonomies ID to be deleted from TrainSet
% 10519       10368. No. 27 and 18 in VirusID_Maper,GROUP 7: Adeno (1,4)
% and (2)

% THen update the codes that construct trainset 
load Mentha_All_Vs.mat VirusID_Maper
    for t1=1:length(TrainSet)
        Crnt=TrainSet{t1,1};
        for c=1:length(Crnt)
            to_validate=VirusID_Maper(Crnt(c));
            if ~ismember(to_validate,taxon_to_delete_from_trainset)
                Crnt(c)=VirusID_Maper(Crnt(c));
            end
        end
        TrainSet{t1,1}=Crnt;
    end

    % Now check which new IDs are not mapped 
outlier_taxon_B=[];
for i=1:length(true_taxon_B)
    tb = true_taxon_B(i);
    check = cellfun(@(x) ismember(tb,x),TrainSet);
    if sum(check)==0
        outlier_taxon_B(end+1)=tb;
    end
end
% There are 105 virus taxonomies that are not in trainset 
TrainSet{1,1}(end+1) = 10324; % Belonging to group 1 
TrainSet{end+1,1} = [10345]; % alphaherpesvirus/Varicellovirus. No existing group
TrainSet{end+1,1} = [10366]; % Murid herpesvirus 1. No existing group 
TrainSet{end+1,1} = [10383,10384]; % Rhadinovirus/ Saimiriine Herpesviurs 2
TrainSet{end+1,1} = [10407];% Orthohepadnavirus 
TrainSet{end+1,1} = [10497];% Asfvirus 
TrainSet{end+1,1}=

[Human_hdrs,Human_seqs] = fastaread('all_human_interacting.fasta');
true_human_hdr = {};
true_SeqH={};
for i=1:length(Human_hdrs)
    check = strsplit(Human_hdrs{i},"|");
    entry = check{2};
    if ismember(entry,ProteinA_Unique)
        true_SeqH{end+1} = Human_seqs{i};
        true_human_hdr{end+1} = Human_hdrs{i};
    end
end

% Before running feature extraction, need to make sure in a pair of H-V
% seqs, both H and V are in true_

load Distance_30_2021.mat true_SeqV;
all_interacting_human={};
all_interacting_virus={};
for i=1:length(true_human_hdr)
    h_header = true_human_hdr{i};
    h_protein = strsplit(h_header,"|");
    h_protein = h_protein{2};
    v_proteins = data(strcmp(data.ProteinA,h_protein),'ProteinB');
    for j=1:length(true_member)
        v_p = strsplit(true_member{j},"|");
        v_p = v_p(2);
        if ismember(v_p,v_proteins.ProteinB)
            all_interacting_human{end+1} = h_protein;
            all_interacting_virus{end+1} = true_member{j};
        end
    end
end

V_hdr = unique(all_interacting_virus);
H_hdr = unique(all_interacting_human);



Threshold_T=[0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9];
N2P_Ratio_train=1;% Negative:Positive Examples Ratio in Training
BLOSUMno=30;

% feature extraction parameters
SamplingMode='CutRandom'; %Disimilarity-based Negative Sampling
Description='Sampling randomly with Cutoff weight <T';
Descriptor='Conjoint';
if strcmp(Descriptor,'Conjoint')
    clear D_par
    D_par.Norm_Type='Shen'; % None, Shen, Cui
    D_par.AA= 'Shen';% Shen, Rand1 Rand2 Rand3 None
    D_par.kmer=3;%  % k [1:5], Larger k takes bulck of time and blocks memory
    D_par.Interface=0;
end
